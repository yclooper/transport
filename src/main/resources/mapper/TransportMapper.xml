<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.transport.dao.TransportMapper">
    <select id="findTransportListInfoByCarId"
            resultType="com.transport.entity.InfoBean">
        select t.id,t.gasoline_cost,t.road_cost,t.ferry_cost,t.weight,t.state,c.starting_place,c.ending_place,c.count,c.remark,c.name,c.phone,u.user_name from transport_info t LEFT JOIN transport_consigner_info c on t.id=c.transport_id  LEFT join user_information u on t.user_id=u.id where t.car_id=#{0}  and t.state!=2
        order by t.update_date desc limit #{1},#{2}
    </select>
    <select id="findTransportListInfoByState"
            resultType="com.transport.entity.InfoBean">
        select t.id,t.gasoline_cost,t.road_cost,t.ferry_cost,t.weight,t.update_date,t.state,c.starting_place,c.ending_place,c.count,c.remark,c.name,c.phone,u.user_name from transport_info t LEFT JOIN transport_consigner_info c on t.id=c.transport_id  LEFT join user_information u on t.user_id=u.id where t.state=#{0}
        order by t.update_date desc limit #{1},#{2}
    </select>

    <select id="getCount" parameterType="com.transport.entity.TransportInfo" resultType="java.lang.Integer">
        select count(*) from transport_info where car_id=#{id} AND state!=2
    </select>

    <select id="getCountByState" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(*) from transport_info where state=#{state}
    </select>

    <insert id="insert" parameterType="com.transport.entity.TransportInfo" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO transport_info
        (id,car_id,user_id,gasoline_cost,road_cost,ferry_cost,state,create_date,update_date,weight) VALUES
        (#{id},#{car_id},#{user_id},#{gasoline_cost},#{road_cost},#{ferry_cost},#{state},#{create_date},#{update_date},#{weight})
    </insert>

    <update id="update" parameterType="com.transport.entity.TransportInfo">
        UPDATE transport_info set state=#{state},update_date=now() where id=#{id}
    </update>

    <select id="countCost" parameterType="java.lang.Integer" resultType="com.transport.entity.Cost">
    select sum(gasoline_cost) as gasoline_cost_total,sum(road_cost) as road_cost_total,sum(ferry_cost) as ferry_cost_total from transport_info where car_id=#{id} AND state!=2
    </select>


    <insert id="updateLocation" parameterType="com.transport.entity.TransportTrns">
        INSERT INTO transport_trns (id,transport_id,location_place,create_date)
        VALUES (#{id},#{transport_id},#{location_place},now())
    </insert>

    <select id="findTransportInfoByCarId" parameterType="java.lang.Integer"
            resultType="com.transport.entity.TransportInfo">
        select * from transport_info where car_id=#{car_id} and state!=2
    </select>

    <update id="updateCost" parameterType="com.transport.entity.TransportInfo">
        UPDATE transport_info set gasoline_cost=#{gasoline_cost},road_cost=#{road_cost},ferry_cost=#{ferry_cost} WHERE id=#{id}
    </update>

    <select id="findAddressList" parameterType="java.lang.Integer" resultType="com.transport.entity.TransportTrns">
        SELECT * from transport_trns WHERE transport_id=#{id} ORDER BY create_date DESC
    </select>

    <select id="findInfoBeanByCarId" parameterType="java.lang.Integer" resultType="com.transport.entity.InfoBean">
        select t.id,t.gasoline_cost,t.road_cost,t.ferry_cost,t.weight,t.state,c.starting_place,c.ending_place,c.count,c.remark,c.name,c.phone,u.user_name from transport_info t LEFT JOIN transport_consigner_info c on t.id=c.transport_id  LEFT join user_information u on t.user_id=u.id where t.car_id=#{carId}  and t.state=0
    </select>
</mapper>